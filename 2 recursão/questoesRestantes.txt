3. 
  Soma de N√∫meros de 1 a N
  Crie uma fun√ß√£o recursiva int soma(int n) que retorne a soma dos n√∫meros de 1 at√© ùëõ.
  Exemplo: soma(5) deve retornar 15 (pois 1+2+3+4+5=15).

4. 
  N√∫mero de D√≠gitos de um N√∫mero: Escreva uma fun√ß√£o recursiva int contar_digitos(int n) que retorne o n√∫mero de d√≠gitos de um n√∫mero inteiro ùëõ.
  Exemplo: contar_digitos(1234) deve retornar 4.

5. 
  Pot√™ncia de um N√∫mero: Implemente uma fun√ß√£o recursiva int potencia(int base, int expoente) para calcular o valor de base elevado a expoente.
  Exemplo: potencia(2, 3) deve retornar 8

6. 
  Verificar Pal√≠ndromo: Escreva uma fun√ß√£o recursiva int palindromo(char palavra[], int inicio, int fim) que verifique se uma string √© um pal√≠ndromo (mesma leitura de frente para tr√°s e vice-versa).
  Exemplo: palindromo("ana", 0, 2) deve retornar 1 (verdadeiro).

7. 
  Soma dos D√≠gitos de um N√∫mero: Crie uma fun√ß√£o recursiva int soma_digitos(int n) que retorne a soma dos d√≠gitos de um n√∫mero.
  Exemplo: soma_digitos(123) deve retornar 6 .

8. 
  M√°ximo Divisor Comum (MDC): Implemente uma fun√ß√£o recursiva int mdc(int a, int b) para encontrar o m√°ximo divisor comum (MDC) de dois n√∫meros usando o algoritmo de Euclides.
  Exemplo: mdc(48, 18) deve retornar 6.

9. 
  Inverter uma String: Escreva uma fun√ß√£o recursiva void inverter(char str[], int inicio, int fim) que inverta uma string em si.
  Exemplo: inverter("abcd", 0, 3) deve transformar str em "dcba".

10. 
  Torre de Han√≥i: Crie uma fun√ß√£o recursiva void torre_hanoi(int n, char origem, char auxiliar, char destino) que mostre os passos para mover n discos da torre de origem para a torre de destino usando uma torre auxiliar.
  Exemplo: torre_hanoi(3, 'A', 'B', 'C') imprime os movimentos necess√°rios para resolver o problema com 3 discos.